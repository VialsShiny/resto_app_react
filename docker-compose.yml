services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_NAME:-app_db}
      MYSQL_USER: ${DB_USER:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  # Interface d'administration phpMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USER:-root}
      PMA_PASSWORD: ${DB_PASSWORD:-root}
      UPLOAD_LIMIT: 50M
    ports:
      - "8080:80"
    networks:
      - backend-network
    depends_on:
      mysql:
        condition: service_healthy

  # Frontend React
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: 100
      WATCHPACK_POLLING: "true"
    networks:
      - app-network
    command: npm run dev -- --host # Backend PHP/Laravel
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    command: sh -c "composer install && php artisan serve --host=0.0.0.0 --port=8000"
    env_file:
      - ./backend/.env
    networks:
      - backend-network
    depends_on:
      - mysql

networks:
  app-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  mysql-data:
